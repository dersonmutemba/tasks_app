// Mocks generated by Mockito 5.3.2 from annotations
// in tasks_app/test/data/repositories/note_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tasks_app/core/platform/network_info.dart' as _i3;
import 'package:tasks_app/data/datasources/note_local_data_source.dart' as _i5;
import 'package:tasks_app/data/datasources/note_remote_data_source.dart' as _i6;
import 'package:tasks_app/domain/entities/note.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNote_0 extends _i1.SmartFake implements _i2.Note {
  _FakeNote_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [NoteLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoteLocalDataSource extends _i1.Mock
    implements _i5.NoteLocalDataSource {
  @override
  _i4.Future<_i2.Note> getNote(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getNote,
          [id],
        ),
        returnValue: _i4.Future<_i2.Note>.value(_FakeNote_0(
          this,
          Invocation.method(
            #getNote,
            [id],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Note>.value(_FakeNote_0(
          this,
          Invocation.method(
            #getNote,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Note>);
  @override
  _i4.Future<List<_i2.Note>> getNotes() => (super.noSuchMethod(
        Invocation.method(
          #getNotes,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Note>>.value(<_i2.Note>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Note>>.value(<_i2.Note>[]),
      ) as _i4.Future<List<_i2.Note>>);
}

/// A class which mocks [NoteRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoteRemoteDataSource extends _i1.Mock
    implements _i6.NoteRemoteDataSource {
  @override
  _i4.Future<List<_i2.Note>> getNotes() => (super.noSuchMethod(
        Invocation.method(
          #getNotes,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Note>>.value(<_i2.Note>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Note>>.value(<_i2.Note>[]),
      ) as _i4.Future<List<_i2.Note>>);
}
